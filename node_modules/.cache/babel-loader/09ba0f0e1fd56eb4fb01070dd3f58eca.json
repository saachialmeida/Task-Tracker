{"ast":null,"code":"import _toConsumableArray from\"C:/Users/saach/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/saach/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/saach/react-task-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Header from'./components/Header';import Tasks from'./components/Tasks';import AddTask from'./components/AddTask';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([{id:1,text:'Doctors Appointment',day:'FEB 5th at 2:30 pm',reminder:true},{id:2,text:'Meeting at School',day:'FEB 5th at 2:30 pm',reminder:true},{id:3,text:'Food Shopping',day:'FEB 5th at 2:30 pm',reminder:false}]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],settasks=_useState4[1];var addTask=function addTask(task){var id=Math.floor(Math.random()*10000)+1;var newTask=_objectSpread({id:id},task);settasks([].concat(_toConsumableArray(tasks),[newTask]));};var deleteTask=function deleteTask(id){settasks(tasks.filter(function(task){return task.id!==id;}));};var toggleReminder=function toggleReminder(id){settasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder})]});};export default App;","map":{"version":3,"sources":["C:/Users/saach/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","showAddTask","setShowAddTask","id","text","day","reminder","tasks","settasks","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map"],"mappings":"+cAAA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,OAAQC,QAAR,KAAuB,OAAvB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAC,QAAJA,CAAAA,GAAI,EAAK,eACyBD,QAAQ,CAAC,KAAD,CADjC,wCACNE,WADM,eACOC,cADP,8BAEYH,QAAQ,CAAC,CAChC,CACII,EAAE,CAAC,CADP,CAEIC,IAAI,CAAC,qBAFT,CAGIC,GAAG,CAAE,oBAHT,CAIIC,QAAQ,CAAE,IAJd,CADgC,CAQhC,CACIH,EAAE,CAAC,CADP,CAEIC,IAAI,CAAC,mBAFT,CAGIC,GAAG,CAAE,oBAHT,CAIIC,QAAQ,CAAE,IAJd,CARgC,CAehC,CACIH,EAAE,CAAC,CADP,CAEIC,IAAI,CAAC,eAFT,CAGIC,GAAG,CAAE,oBAHT,CAIIC,QAAQ,CAAE,KAJd,CAfgC,CAAD,CAFpB,yCAENC,KAFM,eAEAC,QAFA,eAyBf,GAAMC,CAAAA,OAAO,CAAC,QAARA,CAAAA,OAAQ,CAACC,IAAD,CAAQ,CACpB,GAAMP,CAAAA,EAAE,CAAEQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,EAAoC,CAA9C,CACA,GAAMC,CAAAA,OAAO,gBAAKX,EAAE,CAAFA,EAAL,EAAWO,IAAX,CAAb,CACAF,QAAQ,8BAAKD,KAAL,GAAYO,OAAZ,GAAR,CACD,CAJD,CAKA,GAAMC,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACZ,EAAD,CAAM,CACrBK,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAWA,EAArB,EAAb,CAAD,CAAR,CACD,CAFD,CAGA,GAAMc,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,CAACd,EAAD,CAAQ,CAC3BK,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAU,SAACR,IAAD,QACnBA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAZ,gCAAqBO,IAArB,MAA2BJ,QAAQ,CAAC,CAACI,IAAI,CAACJ,QAA1C,GAAsDI,IADnC,EAAV,CAAD,CAAR,CAGD,CAJD,CAKE,mBACE,aAAK,SAAS,CAAC,WAAf,wBACC,KAAC,MAAD,EAAQ,KAAK,CAAE,uBAAMR,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAf,CAAmD,OAAO,CAAEA,WAA5D,EADD,CAEEA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAEQ,OAAhB,EAFjB,cAGC,KAAC,KAAD,EAAO,KAAK,CAAEF,KAAd,CAAqB,QAAQ,CAAEQ,UAA/B,CAA2C,QAAQ,CAAEE,cAArD,EAHD,GADF,CAQD,CA9CD,CAgDA,cAAejB,CAAAA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport {useState} from 'react'\n\nconst App=() =>{\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks,settasks] = useState([\n    {\n        id:1,\n        text:'Doctors Appointment',\n        day: 'FEB 5th at 2:30 pm',\n        reminder: true,\n\n    },\n    {\n        id:2,\n        text:'Meeting at School',\n        day: 'FEB 5th at 2:30 pm',\n        reminder: true,\n\n    },\n    {\n        id:3,\n        text:'Food Shopping',\n        day: 'FEB 5th at 2:30 pm',\n        reminder: false,\n\n    }\n])\nconst addTask=(task)=>{\n  const id= Math.floor(Math.random() * 10000 )+ 1\n  const newTask = { id,...task}\n  settasks([...tasks, newTask ])\n}\nconst deleteTask=(id)=>{\n  settasks(tasks.filter((task) => task.id !==id) )\n}\nconst toggleReminder=(id )=> {\n  settasks(tasks.map((task) =>\n  task.id === id ? {...task, reminder:!task.reminder} : task)\n  )\n}\n  return (\n    <div className='container'>\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask}/>}\n     <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}